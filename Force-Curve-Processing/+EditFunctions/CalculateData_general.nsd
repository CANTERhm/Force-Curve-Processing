<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:nsd="https://structorizer.fisch.lu" version="3.29-12" preRepeat="until " postFor="to" preReturn="return" postForIn="in" preWhile="while " output="OUTPUT" input="INPUT" preFor="for" preExit="exit" preLeave="leave" ignoreCase="true" preThrow="throw" preForIn="foreach" stepFor="by" author="Julian" created="2019-09-04" changedby="Julian" changed="2019-09-04" origin="Structorizer 3.29-12" text="&#34;CalculateData&#34;" comment="&#34;&#34;" color="ffffff" type="program" style="nice">
	<children>
		<instruction text="&#34;INPUT&#34;,&#34;handles (function input)&#34;,&#34;table = handles.guiprops.Features.edit_curve_table&#34;,&#34;curvename = table.UserData.CurrentCurveName&#34;,&#34;prev_edit_func_data = handles.curveprops.(curvename).Results.prev_edit_func&#34;,&#34;current_edit_func_data = handles.curveprops.(curvename).Results.current_edit_func&#34;,&#34;nex_edit_func_data = handles.curveprops.(curvename).Results.nex_edit_funct&#34;,&#34;raw_data = handles.curveprops.(curvename).RawData&#34;" comment="&#34;&#34;" color="ff8000" rotated="0" disabled="0"></instruction>
		<try text="&#34;ME&#34;" comment="&#34;try to retrieve calculated_data from previous EditFunction&#34;,&#34;or from current one. If this property is empty, take &#34;,&#34;RawData.CurveData instead&#34;" color="80ffff" disabled="0">
			<qTry>
				<alternative text="&#34;isempty(current_edit_func.calculated_data)&#34;" comment="&#34;&#34;" color="80ff80" disabled="0">
					<qTrue>
						<instruction text="&#34;curve_data = prev_edit_func.calculated_data&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
					</qTrue>
					<qFalse>
						<instruction text="&#34;curve_data = current_edit_func.calculated_data&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
					</qFalse>
				</alternative>
			</qTry>
			<qCatch>
				<instruction text="&#34;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
				<case text="&#34;ME.identifier&#34;,&#34;MATLAB:fieldnames:InvalidInput'&#34;,&#34;otherwise&#34;" comment="&#34;&#34;" color="80ff80" disabled="0">
					<qCase>
						<alternative text="&#34;handles.procedure.ContactPoint.OnGui&#34;" comment="&#34;&#34;" color="80ff80" disabled="0">
							<qTrue>
								<instruction text="&#34;note = '&#60;some note&#62;'&#34;,&#34;HelperFcn.ShowNotification(note)&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
							</qTrue>
							<qFalse color="ffffff">
							</qFalse>
						</alternative>
						<instruction text="&#34;curve_data = raw_data.CurveData&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
					</qCase>
					<qCase>
						<instruction text="&#34;rethrow(ME)&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
					</qCase>
				</case>
			</qCatch>
			<qFinally color="ffffff">
			</qFinally>
		</try>
		<try text="&#34;ME&#34;" comment="&#34;try to fetch segments from curve_data. &#34;,&#34;If curve_data is not segmented, set curve_data to RawData.CurveData&#34;,&#34;and fetch segments from RawData instead&#34;" color="80ffff" disabled="0">
			<qTry>
				<instruction text="&#34;segments = fieldnames(curve_data)&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
			</qTry>
			<qCatch>
				<case text="&#34;ME.identifier&#34;,&#34;'MATLAB:fieldnames:InvalidInput'&#34;,&#34;otherwise&#34;" comment="&#34;&#34;" color="80ff80" disabled="0">
					<qCase>
						<instruction text="&#34;curve_data = raw_data.CurveData;&#34;,&#34;segments = fieldnames(cuve_data)&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
						<alternative text="&#34;handles.procedure.ContactPoint.OnGui&#34;" comment="&#34;&#34;" color="80ff80" disabled="0">
							<qTrue>
								<instruction text="&#34;note = '&#60;some note&#62;'&#34;,&#34;HelperFcn.ShowNotification(note)&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
							</qTrue>
							<qFalse color="ffffff">
							</qFalse>
						</alternative>
					</qCase>
					<qCase>
						<instruction text="&#34;rethrow(ME)&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
					</qCase>
				</case>
			</qCatch>
			<qFinally color="ffffff">
			</qFinally>
		</try>
		<instruction text="&#34;curve_data &#60;- calculated corrections&#34;" comment="&#34;calculate data&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;OUTPUT&#34;,&#34;handles.curveprops.(curvename).Results.current_edit_func.calculated_data = curve_data&#34;" comment="&#34;write calculation results to current edit function&#34;" color="ff8000" rotated="0" disabled="0"></instruction>
		<alternative text="&#34;~isempty(handles.curveprops.(curvename).Results.next_edit_func)&#34;" comment="&#34;&#34;" color="80ff80" disabled="0">
			<qTrue>
				<instruction text="&#34;handles.curveprops.(curvename).Results.next_edit_func.calculated_data = curve_data&#34;" comment="&#34;wirte calculation results to next_edit_func&#34;" color="ff8000" rotated="0" disabled="0"></instruction>
			</qTrue>
			<qFalse color="ff8000">
			</qFalse>
		</alternative>
	</children>
</root>